version: '3.5'

networks:
  ocean:
    name: poseidon_ocean

services:

  tlsr-ca:
    container_name: tlsr-ca.blockchain.biz
    image: hyperledger/fabric-ca:1.4.8
    environment:
      - FABRIC_CA_SERVER_HOME=/etc/hyperledger/fabric-ca/server
      - FABRIC_CA_SERVER_PORT=7010
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_CA_NAME=tlsr-ca.blockchain.biz
      - FABRIC_CA_SERVER_CSR_CN=tlsr-ca.blockchain.biz
      - FABRIC_CA_SERVER_CSR_HOSTS=tlsr-ca.blockchain.biz
      - FABRIC_CA_SERVER_DEBUG=true
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:7011
      - FABRIC_CA_SERVER_METRICS_PROVIDER=prometheus
    working_dir: /etc/hyperledger/fabric-ca/server 
    volumes:
      - ./tlsr/ca:/etc/hyperledger/fabric-ca
    ports:
      - 7010:7010
      - 7011:7011
    networks:
      - ocean
    command: sh -c 'fabric-ca-server start -d -b tlsr-ca-admin:tlsr-ca-pwd --port 7010'

  rca-sea:
    container_name: rca-sea.blockchain.biz
    image: hyperledger/fabric-ca:1.4.8
    environment:
      - FABRIC_CA_SERVER_HOME=/etc/hyperledger/fabric-ca/server
      - FABRIC_CA_SERVER_PORT=7020
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_CA_NAME=rca-sea.blockchain.biz
      - FABRIC_CA_SERVER_CSR_CN=rca-sea.blockchain.biz
      - FABRIC_CA_SERVER_CSR_HOSTS=rca-sea.blockchain.biz
      - FABRIC_CA_SERVER_DEBUG=true
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:7021
      - FABRIC_CA_SERVER_METRICS_PROVIDER=prometheus
    working_dir: /etc/hyperledger/fabric-ca/server 
    volumes:
      - ./sea/rca:/etc/hyperledger/fabric-ca
    ports:
      - 7020:7020
      - 7021:7021
    networks:
      - ocean
    command: sh -c 'fabric-ca-server start -d -b rca-sea-admin:rca-sea-pwd --port 7020'

  orderer-sea:
    container_name: orderer-sea.blockchain.biz
    image: hyperledger/fabric-orderer:1.4.7
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_HOME=/etc/hyperledger/fabric
      - ORDERER_FILELEDGER_LOCATION=/etc/hyperledger/fabric/production/
      - ORDERER_FILELEDGER_PREFIX=hlf-orderer-sea
      - ORDERER_HOST=orderer-sea.blockchain.biz
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISPROFILE=MultiOrgMSPSolo
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=SeaMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/users/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/users/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/users/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/users/orderer/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem]
      - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=false
      # Operations
      - ORDERER_GENERAL_OPERATIONS_LISTENADDRESS=0.0.0.0:7051
      - ORDERER_GENERAL_METRICS_PROVIDER=prometheus
      - ORDERER_DEBUG_BROADCASTTRACEDIR=data/logs
      # Additional ORDERER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-sea-tls-cert.pem
      - ORDERER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/client/tls-root-cert/rca-sea-ca-cert.pem
      - ORDERER_CACERT=/etc/hyperledger/msp/users/orderer/msp/cacerts/rca-sea-blockchain-biz-7020.pem
      - ADMIN_ORDERER_CACERT=/etc/hyperledger/msp/users/admin/msp/cacerts/rca-sea-blockchain-biz-7020.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./sea/orderer:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./sea/rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    ports:
      - 7050:7050
      - 7051:7051
    networks:
      - ocean
    command: orderer

  rca-anchova:
    container_name: rca-anchova.blockchain.biz
    image: hyperledger/fabric-ca:1.4.8
    environment:
      - FABRIC_CA_SERVER_HOME=/etc/hyperledger/fabric-ca/server
      - FABRIC_CA_SERVER_PORT=7030
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_CA_NAME=rca-anchova.blockchain.biz
      - FABRIC_CA_SERVER_CSR_CN=rca-anchova.blockchain.biz
      - FABRIC_CA_SERVER_CSR_HOSTS=rca-anchova.blockchain.biz
      - FABRIC_CA_SERVER_DEBUG=true
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:7031
      - FABRIC_CA_SERVER_METRICS_PROVIDER=prometheus
    working_dir: /etc/hyperledger/fabric-ca/server 
    volumes:
      - ./anchova/rca:/etc/hyperledger/fabric-ca
    ports:
      - 7030:7030
      - 7031:7031
    networks:
      - ocean
    command: sh -c 'fabric-ca-server start -d -b rca-anchova-admin:rca-anchova-pwd --port 7030'

  couchdb.anchova.peer0:
    container_name: anchova.couchdb.peer0
    image: hyperledger/fabric-couchdb:0.4.17
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_PEER_NETWORKID=ocean
      - COUCHDB_USER=admindb
      - COUCHDB_PASSWORD=adminpwd
    working_dir: /etc/hyperledger/couchdb
    volumes:
      - /var/run:/host/var/run
      # Default root path
      - ./anchova/couchdb0:/etc/hyperledger/couchdb
    ports:
      # internal port changed to avoid conflict with other peer in other docker-compose.yml
      - 7032:5984
    networks:
      - ocean

  couchdb.anchova.peer1:
    container_name: anchova.couchdb.peer1
    image: hyperledger/fabric-couchdb:0.4.17
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_PEER_NETWORKID=ocean
      - COUCHDB_USER=admindb
      - COUCHDB_PASSWORD=adminpwd
    working_dir: /etc/hyperledger/couchdb
    volumes:
      - /var/run:/host/var/run
      # Default root path
      - ./anchova/couchdb1:/etc/hyperledger/couchdb
    ports:
      # internal port changed to avoid conflict with other peer in other docker-compose.yml
      - 7033:5984
    networks:
      - ocean

  peer0-anchova:
    container_name: peer0-anchova.blockchain.biz
    image: hyperledger/fabric-peer:1.4.7
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - CORE_PEER_FILESYSTEMPATH=/etc/hyperledger/fabric/ledger
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_NETWORKID=ocean
      - CORE_PEER_ID=peer0-anchova.blockchain.biz
      - CORE_PEER_LOCALMSPID=AnchovaMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/peer0/msp
      - CORE_PEER_ADDRESS=peer0-anchova.blockchain.biz:7034
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7034
      - CORE_PEER_ADMINSERVICE_LISTENADDRESS=0.0.0.0:7034
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7035
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7036
      # Go profiling tools only in none production environment
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_COMMITTER_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem
      # - CORE_PEER_CHAINCODE_MODE=dev
      # - CORE_PEER_GOSSIP_BOOTSTRAP=peer0-anchova.blockchain.biz:7034
      - CORE_PEER_GOSSIP_ENDPOINT=peer0-anchova.blockchain.biz:7034
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0-anchova.blockchain.biz:7034
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      # Logging
      - CORE_LOGGING_PEER=info
      - CORE_LOGGING_LEDGER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_CHAINCODE_LOGGING_SHIM=info
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      # Operations
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:7037
      - CORE_METRICS_PROVIDER=prometheus
      # For each historic key update, the historic value and associated transaction id and timestamp 
      # are stored in history database. See Class: ChaincodeStub and method <async> getHistoryForKey(key)
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=anchova.couchdb.peer0:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admindb
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpwd
      # Additional PEER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-anchova-tls-cert.pem
      - PEER_CACERT=/etc/hyperledger/msp/users/peer0/msp/cacerts/rca-anchova-blockchain-biz-7030.pem
      - ADMIN_SIGNCERTS=/etc/hyperledger/msp/users/admin/msp/signcerts/cert.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./anchova/peer0:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./anchova//rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    ports:
      - 7034:7034
      - 7035:7035
      - 7036:7036
      - 7037:7037
    networks:
      - ocean
    depends_on:
      - couchdb.anchova.peer0
      - orderer-sea
    command: peer node start
    # command: peer node start --peer-chaincodedev=true

  peer1-anchova:
    container_name: peer1-anchova.blockchain.biz
    image: hyperledger/fabric-peer:1.4.7
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - CORE_PEER_FILESYSTEMPATH=/etc/hyperledger/fabric/ledger
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_NETWORKID=ocean
      - CORE_PEER_ID=peer1-anchova.blockchain.biz
      - CORE_PEER_LOCALMSPID=AnchovaMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/peer1/msp
      - CORE_PEER_ADDRESS=peer1-anchova.blockchain.biz:7134
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7134
      - CORE_PEER_ADMINSERVICE_LISTENADDRESS=0.0.0.0:7134
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7135
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7136
      # Go profiling tools only in none production environment
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_COMMITTER_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem
      # - CORE_PEER_CHAINCODE_MODE=dev
      # - CORE_PEER_GOSSIP_BOOTSTRAP=peer1-anchova.blockchain.biz:7134
      - CORE_PEER_GOSSIP_ENDPOINT=peer1-anchova.blockchain.biz:7134
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1-anchova.blockchain.biz:7134
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      # Logging
      - CORE_LOGGING_PEER=info
      - CORE_LOGGING_LEDGER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_CHAINCODE_LOGGING_SHIM=info
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      # Operations
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:7137
      - CORE_METRICS_PROVIDER=prometheus
      # For each historic key update, the historic value and associated transaction id and timestamp 
      # are stored in history database. See Class: ChaincodeStub and method <async> getHistoryForKey(key)
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=anchova.couchdb.peer1:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admindb
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpwd
      # Additional PEER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-anchova-tls-cert.pem
      - PEER_CACERT=/etc/hyperledger/msp/users/peer1/msp/cacerts/rca-anchova-blockchain-biz-7030.pem
      - ADMIN_SIGNCERTS=/etc/hyperledger/msp/users/admin/msp/signcerts/cert.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./anchova/peer1:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./anchova/rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    ports:
      - 7134:7134
      - 7135:7135
      - 7136:7136
      - 7137:7137
    networks:
      - ocean
    depends_on:
      - couchdb.anchova.peer1
      - orderer-sea
    command: peer node start
    # command: peer node start --peer-chaincodedev=true

  cli.anchova.peer0:
    container_name: cli.anchova.peer0
    image: hyperledger/fabric-tools:1.4.7
    tty: true
    stdin_open: true
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - CORE_PEER_FILESYSTEMPATH=/etc/hyperledger/fabric/
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_NETWORKID=ocean
      - CORE_PEER_ID=cli.anchova.peer0
      - CORE_PEER_LOCALMSPID=AnchovaMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp
      - CORE_PEER_ADDRESS=peer0-anchova.blockchain.biz:7034
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem
      # Logging
      - CORE_LOGGING_PEER=debug
      - CORE_LOGGING_LEDGER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=debug
      - CORE_CHAINCODE_LOGGING_SHIM=debug
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      # Additional PEER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-anchova-tls-cert.pem
      - PEER_CACERT=/etc/hyperledger/msp/users/peer0/msp/cacerts/rca-anchova-blockchain-biz-7030.pem
      - ADMIN_SIGNCERTS=/etc/hyperledger/msp/users/admin/msp/signcerts/cert.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./anchova/peer0:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./anchova/rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    networks:
      - ocean
    depends_on:
      - peer0-anchova
    command: /bin/bash

  cli.anchova.peer1:
    container_name: cli.anchova.peer1
    image: hyperledger/fabric-tools:1.4.7
    tty: true
    stdin_open: true
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - CORE_PEER_FILESYSTEMPATH=/etc/hyperledger/fabric/
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_NETWORKID=ocean
      - CORE_PEER_ID=cli.anchova.peer1
      - CORE_PEER_LOCALMSPID=AnchovaMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp
      - CORE_PEER_ADDRESS=peer1-anchova.blockchain.biz:7134
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem
      # Logging
      - CORE_LOGGING_PEER=debug
      - CORE_LOGGING_LEDGER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=debug
      - CORE_CHAINCODE_LOGGING_SHIM=debug
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      # Additional PEER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-anchova-tls-cert.pem
      - PEER_CACERT=/etc/hyperledger/msp/users/peer1/msp/cacerts/rca-anchova-blockchain-biz-7030.pem
      - ADMIN_SIGNCERTS=/etc/hyperledger/msp/users/admin/msp/signcerts/cert.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./anchova/peer1:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./anchova/rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    networks:
      - ocean
    depends_on:
      - peer1-anchova
    command: /bin/bash

  rca-badejo:
    container_name: rca-badejo.blockchain.biz
    image: hyperledger/fabric-ca:1.4.8
    environment:
      - FABRIC_CA_SERVER_HOME=/etc/hyperledger/fabric-ca/server
      - FABRIC_CA_SERVER_PORT=7040
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_CA_NAME=rca-badejo.blockchain.biz
      - FABRIC_CA_SERVER_CSR_CN=rca-badejo.blockchain.biz
      - FABRIC_CA_SERVER_CSR_HOSTS=rca-badejo.blockchain.biz
      - FABRIC_CA_SERVER_DEBUG=true
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:7041
      - FABRIC_CA_SERVER_METRICS_PROVIDER=prometheus
    working_dir: /etc/hyperledger/fabric-ca/server 
    volumes:
      - ./badejo/rca:/etc/hyperledger/fabric-ca
    ports:
      - 7040:7040
      - 7041:7041
    networks:
      - ocean
    command: sh -c 'fabric-ca-server start -d -b rca-badejo-admin:rca-badejo-pwd --port 7040'

  couchdb.badejo.peer0:
    container_name: badejo.couchdb.peer0
    image: hyperledger/fabric-couchdb:0.4.17
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_PEER_NETWORKID=ocean
      - COUCHDB_USER=admindb
      - COUCHDB_PASSWORD=adminpwd
    working_dir: /etc/hyperledger/couchdb
    volumes:
      - /var/run:/host/var/run
      # Default root path
      - ./badejo/couchdb0:/etc/hyperledger/couchdb
    ports:
      # internal port changed to avoid conflict with other peer in other docker-compose.yml
      - 7042:5984
    networks:
      - ocean

  couchdb.badejo.peer1:
    container_name: badejo.couchdb.peer1
    image: hyperledger/fabric-couchdb:0.4.17
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_PEER_NETWORKID=ocean
      - COUCHDB_USER=admindb
      - COUCHDB_PASSWORD=adminpwd
    working_dir: /etc/hyperledger/couchdb
    volumes:
      - /var/run:/host/var/run
      # Default root path
      - ./badejo/couchdb1:/etc/hyperledger/couchdb
    ports:
      # internal port changed to avoid conflict with other peer in other docker-compose.yml
      - 7043:5984
    networks:
      - ocean

  peer0-badejo:
    container_name: peer0-badejo.blockchain.biz
    image: hyperledger/fabric-peer:1.4.7
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - CORE_PEER_FILESYSTEMPATH=/etc/hyperledger/fabric/ledger
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_NETWORKID=ocean
      - CORE_PEER_ID=peer0-badejo.blockchain.biz
      - CORE_PEER_LOCALMSPID=BadejoMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/peer0/msp
      - CORE_PEER_ADDRESS=peer0-badejo.blockchain.biz:7044
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7044
      - CORE_PEER_ADMINSERVICE_LISTENADDRESS=0.0.0.0:7044
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7045
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7046
      # Go profiling tools only in none production environment
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_COMMITTER_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem
      # - CORE_PEER_CHAINCODE_MODE=dev
      # - CORE_PEER_GOSSIP_BOOTSTRAP=peer0-badejo.blockchain.biz:7044
      - CORE_PEER_GOSSIP_ENDPOINT=peer0-badejo.blockchain.biz:7044
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0-badejo.blockchain.biz:7044
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      # Logging
      - CORE_LOGGING_PEER=info
      - CORE_LOGGING_LEDGER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_CHAINCODE_LOGGING_SHIM=info
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      # Operations
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:7047
      - CORE_METRICS_PROVIDER=prometheus
      # For each historic key update, the historic value and associated transaction id and timestamp 
      # are stored in history database. See Class: ChaincodeStub and method <async> getHistoryForKey(key)
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=badejo.couchdb.peer0:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admindb
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpwd
      # Additional PEER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-badejo-tls-cert.pem
      - PEER_CACERT=/etc/hyperledger/msp/users/peer0/msp/cacerts/rca-badejo-blockchain-biz-7040.pem
      - ADMIN_SIGNCERTS=/etc/hyperledger/msp/users/admin/msp/signcerts/cert.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./badejo/peer0:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./badejo/rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    ports:
      - 7044:7044
      - 7045:7045
      - 7046:7046
      - 7047:7047
    networks:
      - ocean
    depends_on:
      - couchdb.badejo.peer0
      - orderer-sea
    command: peer node start
    # command: peer node start --peer-chaincodedev=true

  peer1-badejo:
    container_name: peer1-badejo.blockchain.biz
    image: hyperledger/fabric-peer:1.4.7
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - CORE_PEER_FILESYSTEMPATH=/etc/hyperledger/fabric/ledger
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_NETWORKID=ocean
      - CORE_PEER_ID=peer1-badejo.blockchain.biz
      - CORE_PEER_LOCALMSPID=BadejoMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/peer1/msp
      - CORE_PEER_ADDRESS=peer1-badejo.blockchain.biz:7144
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7144
      - CORE_PEER_ADMINSERVICE_LISTENADDRESS=0.0.0.0:7144
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7145
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7146
      # Go profiling tools only in none production environment
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_COMMITTER_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem
      # - CORE_PEER_CHAINCODE_MODE=dev
      # - CORE_PEER_GOSSIP_BOOTSTRAP=peer1-badejo.blockchain.biz:7144
      - CORE_PEER_GOSSIP_ENDPOINT=peer1-badejo.blockchain.biz:7144
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1-badejo.blockchain.biz:7144
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      # Logging
      - CORE_LOGGING_PEER=info
      - CORE_LOGGING_LEDGER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_CHAINCODE_LOGGING_SHIM=info
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      # Operations
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:7147
      - CORE_METRICS_PROVIDER=prometheus
      # For each historic key update, the historic value and associated transaction id and timestamp 
      # are stored in history database. See Class: ChaincodeStub and method <async> getHistoryForKey(key)
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=badejo.couchdb.peer1:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admindb
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpwd
      # Additional PEER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-badejo-tls-cert.pem
      - PEER_CACERT=/etc/hyperledger/msp/users/peer1/msp/cacerts/rca-badejo-blockchain-biz-7040.pem
      - ADMIN_SIGNCERTS=/etc/hyperledger/msp/users/admin/msp/signcerts/cert.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./badejo/peer1:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./badejo/rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    ports:
      - 7144:7144
      - 7145:7145
      - 7146:7146
      - 7147:7147
    networks:
      - ocean
    depends_on:
      - couchdb.badejo.peer1
      - orderer-sea
    command: peer node start
    # command: peer node start --peer-chaincodedev=true

  cli.badejo.peer0:
    container_name: cli.badejo.peer0
    image: hyperledger/fabric-tools:1.4.7
    tty: true
    stdin_open: true
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - CORE_PEER_FILESYSTEMPATH=/etc/hyperledger/fabric/
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_NETWORKID=ocean
      - CORE_PEER_ID=cli.badejo.peer0
      - CORE_PEER_LOCALMSPID=BadejoMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp
      - CORE_PEER_ADDRESS=peer0-badejo.blockchain.biz:7044
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/peer0/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem
      # Logging
      - CORE_LOGGING_PEER=debug
      - CORE_LOGGING_LEDGER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=debug
      - CORE_CHAINCODE_LOGGING_SHIM=debug
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      # Additional PEER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-badejo-tls-cert.pem
      - PEER_CACERT=/etc/hyperledger/msp/users/peer0/msp/cacerts/rca-badejo-blockchain-biz-7040.pem
      - ADMIN_SIGNCERTS=/etc/hyperledger/msp/users/admin/msp/signcerts/cert.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./badejo/peer0:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./badejo/rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    networks:
      - ocean
    depends_on:
      - peer0-badejo
    command: /bin/bash

  cli.badejo.peer1:
    container_name: cli.badejo.peer1
    image: hyperledger/fabric-tools:1.4.7
    tty: true
    stdin_open: true
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=poseidon_ocean
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/
      - CORE_PEER_FILESYSTEMPATH=/etc/hyperledger/fabric/
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_NETWORKID=ocean
      - CORE_PEER_ID=cli.badejo.peer1
      - CORE_PEER_LOCALMSPID=BadejoMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp
      - CORE_PEER_ADDRESS=peer1-badejo.blockchain.biz:7144
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/peer1/tls-msp/tlscacerts/tls-tlsr-ca-blockchain-biz-7010.pem
      # Logging
      - CORE_LOGGING_PEER=debug
      - CORE_LOGGING_LEDGER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=debug
      - CORE_CHAINCODE_LOGGING_SHIM=debug
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      # Additional PEER vars to support configs at runtime
      - TLSR_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/ca-tlsr-tls-cert.pem
      - RCA_TLS_CERT=/etc/hyperledger/msp/client/tls-ca/rca-badejo-tls-cert.pem
      - PEER_CACERT=/etc/hyperledger/msp/users/peer1/msp/cacerts/rca-badejo-blockchain-biz-7040.pem
      - ADMIN_SIGNCERTS=/etc/hyperledger/msp/users/admin/msp/signcerts/cert.pem
    working_dir: /etc/hyperledger/fabric
    volumes:
      # VM docker stream folder mapping
      - /var/run/:/host/var/run/
      # Default root path
      - ./badejo/peer1:/etc/hyperledger/fabric
      # Map the folder to root of Fabric CA crypto assets
      - ./badejo/rca:/etc/hyperledger/msp/
      # Folder with channel create tx file
      - ./configtx:/etc/hyperledger/configtx
      # For chaincode and application
      - ./application:/etc/hyperledger/application
      - ./chaincode:/etc/hyperledger/chaincode
    networks:
      - ocean
    depends_on:
      - peer1-badejo
    command: /bin/bash
    
# END